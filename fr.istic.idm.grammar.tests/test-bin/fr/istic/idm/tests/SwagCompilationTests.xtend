/*
 * generated by Xtext 2.25.0
 */
package fr.istic.idm.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.eclipse.xtext.xbase.testing.CompilationTestHelper
import fr.istic.idm.generator.SwagGenerator
import fr.istic.idm.generator.compilers.JqCompiler
import fr.istic.idm.generator.compilers.JsonpathCompiler

@ExtendWith(InjectionExtension)
@InjectWith(SwagInjectorProvider)
class SwagCompilationTests {

	@Inject extension CompilationTestHelper
	
	@Test
	def void JqBaseTest() {
		SwagGenerator.compiler = new JqCompiler
		'''.'''.assertCompilesTo('''.''') 
	}
	
	@Test
	def void JpathBaseTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''.'''.assertCompilesTo('''$''') 
	}
	
	@Test
    def void JqSubitemsTest() {
        SwagGenerator.compiler = new JqCompiler
        '''item[*]'''.assertCompilesTo('''.["item"] | [ .[]]''') 
    }
	
	@Test
	def void JpathSubitemsTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''item[*]'''.assertCompilesTo('''$['item'][*]''') 
	}
	
	@Test
	def void JqSubitemLocationTest() {
		SwagGenerator.compiler = new JqCompiler
		'''item[..7]'''.assertCompilesTo('''.["item"] | .[:7]''') 
	}
	
	@Test
	def void JpathSubitemLocationTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''item[..7]'''.assertCompilesTo('''$['item'][:7]''') 
	}
	
	@Test
	def void JqNamedItemTest() {
		SwagGenerator.compiler = new JqCompiler
		'''item[entry="value"]'''.assertCompilesTo('''.["item"] | map(select(.["entry"] == "value"))''') 
	}
	
	@Test
	def void JpathNamedItemTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''item[entry="value"]'''.assertCompilesTo('''$['item'][?(@['entry'] == 'value')]''') 
	}
	
	@Test
	def void JqGetValueFromChosenItemTest() {
		SwagGenerator.compiler = new JqCompiler
		'''item[7].val'''.assertCompilesTo('''.["item"] | .[7] | .["val"]''') 
	}
	
	@Test
	def void JpathGetValueFromChosenItemTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''item[7].val'''.assertCompilesTo('''$['item'][7]['val']''') 
	}
	
	@Test
	def void JqGetNthFromConditionTest() {
		SwagGenerator.compiler = new JqCompiler
		'''item[val=22, 0]'''.assertCompilesTo('''.["item"] | map(select(.["val"] == 22)) | .[0]''') 
	}
	
	@Test
	def void JpathGetNthFromConditionTest() {
		SwagGenerator.compiler = new JsonpathCompiler
		'''item[val=22, 0]'''.assertCompilesTo("$['item'][?(@['val'] == 22)]\n$[0]") 
	}
	
}
