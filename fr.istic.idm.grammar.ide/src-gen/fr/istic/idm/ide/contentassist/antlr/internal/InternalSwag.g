/*
 * generated by Xtext 2.25.0
 */
grammar InternalSwag;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package fr.istic.idm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.istic.idm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.istic.idm.services.SwagGrammarAccess;

}
@parser::members {
	private SwagGrammarAccess grammarAccess;

	public void setGrammarAccess(SwagGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getAlternatives()); }
		(rule__Node__Alternatives)
		{ after(grammarAccess.getNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicNode
entryRuleBasicNode
:
{ before(grammarAccess.getBasicNodeRule()); }
	 ruleBasicNode
{ after(grammarAccess.getBasicNodeRule()); } 
	 EOF 
;

// Rule BasicNode
ruleBasicNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicNodeAccess().getGroup()); }
		(rule__BasicNode__Group__0)
		{ after(grammarAccess.getBasicNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayNode
entryRuleArrayNode
:
{ before(grammarAccess.getArrayNodeRule()); }
	 ruleArrayNode
{ after(grammarAccess.getArrayNodeRule()); } 
	 EOF 
;

// Rule ArrayNode
ruleArrayNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayNodeAccess().getGroup()); }
		(rule__ArrayNode__Group__0)
		{ after(grammarAccess.getArrayNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getAlternatives()); }
		(rule__Filter__Alternatives)
		{ after(grammarAccess.getFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllFilter
entryRuleAllFilter
:
{ before(grammarAccess.getAllFilterRule()); }
	 ruleAllFilter
{ after(grammarAccess.getAllFilterRule()); } 
	 EOF 
;

// Rule AllFilter
ruleAllFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllFilterAccess().getGroup()); }
		(rule__AllFilter__Group__0)
		{ after(grammarAccess.getAllFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathFilter
entryRulePathFilter
:
{ before(grammarAccess.getPathFilterRule()); }
	 rulePathFilter
{ after(grammarAccess.getPathFilterRule()); } 
	 EOF 
;

// Rule PathFilter
rulePathFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathFilterAccess().getAlternatives()); }
		(rule__PathFilter__Alternatives)
		{ after(grammarAccess.getPathFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualFilter
entryRuleEqualFilter
:
{ before(grammarAccess.getEqualFilterRule()); }
	 ruleEqualFilter
{ after(grammarAccess.getEqualFilterRule()); } 
	 EOF 
;

// Rule EqualFilter
ruleEqualFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualFilterAccess().getGroup()); }
		(rule__EqualFilter__Group__0)
		{ after(grammarAccess.getEqualFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistFilter
entryRuleExistFilter
:
{ before(grammarAccess.getExistFilterRule()); }
	 ruleExistFilter
{ after(grammarAccess.getExistFilterRule()); } 
	 EOF 
;

// Rule ExistFilter
ruleExistFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistFilterAccess().getGroup()); }
		(rule__ExistFilter__Group__0)
		{ after(grammarAccess.getExistFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexFilter
entryRuleIndexFilter
:
{ before(grammarAccess.getIndexFilterRule()); }
	 ruleIndexFilter
{ after(grammarAccess.getIndexFilterRule()); } 
	 EOF 
;

// Rule IndexFilter
ruleIndexFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexFilterAccess().getGroup()); }
		(rule__IndexFilter__Group__0)
		{ after(grammarAccess.getIndexFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundFilter
entryRuleBoundFilter
:
{ before(grammarAccess.getBoundFilterRule()); }
	 ruleBoundFilter
{ after(grammarAccess.getBoundFilterRule()); } 
	 EOF 
;

// Rule BoundFilter
ruleBoundFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundFilterAccess().getAlternatives()); }
		(rule__BoundFilter__Alternatives)
		{ after(grammarAccess.getBoundFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListFilter
entryRuleListFilter
:
{ before(grammarAccess.getListFilterRule()); }
	 ruleListFilter
{ after(grammarAccess.getListFilterRule()); } 
	 EOF 
;

// Rule ListFilter
ruleListFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListFilterAccess().getGroup()); }
		(rule__ListFilter__Group__0)
		{ after(grammarAccess.getListFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonValue
entryRuleJsonValue
:
{ before(grammarAccess.getJsonValueRule()); }
	 ruleJsonValue
{ after(grammarAccess.getJsonValueRule()); } 
	 EOF 
;

// Rule JsonValue
ruleJsonValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonValueAccess().getAlternatives()); }
		(rule__JsonValue__Alternatives)
		{ after(grammarAccess.getJsonValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonNull
entryRuleJsonNull
:
{ before(grammarAccess.getJsonNullRule()); }
	 ruleJsonNull
{ after(grammarAccess.getJsonNullRule()); } 
	 EOF 
;

// Rule JsonNull
ruleJsonNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonNullAccess().getGroup()); }
		(rule__JsonNull__Group__0)
		{ after(grammarAccess.getJsonNullAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonNumber
entryRuleJsonNumber
:
{ before(grammarAccess.getJsonNumberRule()); }
	 ruleJsonNumber
{ after(grammarAccess.getJsonNumberRule()); } 
	 EOF 
;

// Rule JsonNumber
ruleJsonNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonNumberAccess().getGroup()); }
		(rule__JsonNumber__Group__0)
		{ after(grammarAccess.getJsonNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonBoolean
entryRuleJsonBoolean
:
{ before(grammarAccess.getJsonBooleanRule()); }
	 ruleJsonBoolean
{ after(grammarAccess.getJsonBooleanRule()); } 
	 EOF 
;

// Rule JsonBoolean
ruleJsonBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getGroup()); }
		(rule__JsonBoolean__Group__0)
		{ after(grammarAccess.getJsonBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonString
entryRuleJsonString
:
{ before(grammarAccess.getJsonStringRule()); }
	 ruleJsonString
{ after(grammarAccess.getJsonStringRule()); } 
	 EOF 
;

// Rule JsonString
ruleJsonString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonStringAccess().getGroup()); }
		(rule__JsonString__Group__0)
		{ after(grammarAccess.getJsonStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getArrayNodeParserRuleCall_0()); }
		ruleArrayNode
		{ after(grammarAccess.getNodeAccess().getArrayNodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeAccess().getBasicNodeParserRuleCall_1()); }
		ruleBasicNode
		{ after(grammarAccess.getNodeAccess().getBasicNodeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicNode__StrAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicNodeAccess().getStrIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBasicNodeAccess().getStrIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicNodeAccess().getStrSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getBasicNodeAccess().getStrSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__StrAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayNodeAccess().getStrIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArrayNodeAccess().getStrIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayNodeAccess().getStrSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getArrayNodeAccess().getStrSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getBoundFilterParserRuleCall_0()); }
		ruleBoundFilter
		{ after(grammarAccess.getFilterAccess().getBoundFilterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterAccess().getIndexFilterParserRuleCall_1()); }
		ruleIndexFilter
		{ after(grammarAccess.getFilterAccess().getIndexFilterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFilterAccess().getPathFilterParserRuleCall_2()); }
		rulePathFilter
		{ after(grammarAccess.getFilterAccess().getPathFilterParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFilterAccess().getAllFilterParserRuleCall_3()); }
		ruleAllFilter
		{ after(grammarAccess.getFilterAccess().getAllFilterParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathFilter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathFilterAccess().getExistFilterParserRuleCall_0()); }
		(ruleExistFilter)
		{ after(grammarAccess.getPathFilterAccess().getExistFilterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathFilterAccess().getEqualFilterParserRuleCall_1()); }
		ruleEqualFilter
		{ after(grammarAccess.getPathFilterAccess().getEqualFilterParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundFilterAccess().getGroup_0()); }
		(rule__BoundFilter__Group_0__0)
		{ after(grammarAccess.getBoundFilterAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoundFilterAccess().getGroup_1()); }
		(rule__BoundFilter__Group_1__0)
		{ after(grammarAccess.getBoundFilterAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonValueAccess().getJsonBooleanParserRuleCall_0()); }
		ruleJsonBoolean
		{ after(grammarAccess.getJsonValueAccess().getJsonBooleanParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonValueAccess().getJsonNumberParserRuleCall_1()); }
		ruleJsonNumber
		{ after(grammarAccess.getJsonValueAccess().getJsonNumberParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJsonValueAccess().getJsonNullParserRuleCall_2()); }
		ruleJsonNull
		{ after(grammarAccess.getJsonValueAccess().getJsonNullParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJsonValueAccess().getJsonStringParserRuleCall_3()); }
		ruleJsonString
		{ after(grammarAccess.getJsonValueAccess().getJsonStringParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__BoolAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getBoolTrueKeyword_1_0_0()); }
		'true'
		{ after(grammarAccess.getJsonBooleanAccess().getBoolTrueKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonBooleanAccess().getBoolFalseKeyword_1_0_1()); }
		'false'
		{ after(grammarAccess.getJsonBooleanAccess().getBoolFalseKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPathAction_0()); }
	()
	{ after(grammarAccess.getPathAccess().getPathAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getGroup_1()); }
	(rule__Path__Group_1__0)?
	{ after(grammarAccess.getPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__0__Impl
	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getNodesAssignment_1_0()); }
	(rule__Path__NodesAssignment_1_0)
	{ after(grammarAccess.getPathAccess().getNodesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getGroup_1_1()); }
	(rule__Path__Group_1_1__0)*
	{ after(grammarAccess.getPathAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1_1__0__Impl
	rule__Path__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getFullStopKeyword_1_1_0()); }
	'.'
	{ after(grammarAccess.getPathAccess().getFullStopKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getNodesAssignment_1_1_1()); }
	(rule__Path__NodesAssignment_1_1_1)
	{ after(grammarAccess.getPathAccess().getNodesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicNode__Group__0__Impl
	rule__BasicNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicNodeAccess().getBasicNodeAction_0()); }
	()
	{ after(grammarAccess.getBasicNodeAccess().getBasicNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicNodeAccess().getStrAssignment_1()); }
	(rule__BasicNode__StrAssignment_1)
	{ after(grammarAccess.getBasicNodeAccess().getStrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayNode__Group__0__Impl
	rule__ArrayNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayNodeAccess().getArrayNodeAction_0()); }
	()
	{ after(grammarAccess.getArrayNodeAccess().getArrayNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayNode__Group__1__Impl
	rule__ArrayNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayNodeAccess().getStrAssignment_1()); }
	(rule__ArrayNode__StrAssignment_1)
	{ after(grammarAccess.getArrayNodeAccess().getStrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayNode__Group__2__Impl
	rule__ArrayNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayNodeAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getArrayNodeAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayNode__Group__3__Impl
	rule__ArrayNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayNodeAccess().getFilterAssignment_3()); }
	(rule__ArrayNode__FilterAssignment_3)?
	{ after(grammarAccess.getArrayNodeAccess().getFilterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayNode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayNodeAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getArrayNodeAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllFilter__Group__0__Impl
	rule__AllFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllFilterAccess().getAllFilterAction_0()); }
	()
	{ after(grammarAccess.getAllFilterAccess().getAllFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllFilterAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getAllFilterAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualFilter__Group__0__Impl
	rule__EqualFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualFilterAccess().getEqualFilterAction_0()); }
	()
	{ after(grammarAccess.getEqualFilterAccess().getEqualFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualFilter__Group__1__Impl
	rule__EqualFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualFilterAccess().getPathAssignment_1()); }
	(rule__EqualFilter__PathAssignment_1)
	{ after(grammarAccess.getEqualFilterAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualFilter__Group__2__Impl
	rule__EqualFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualFilterAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getEqualFilterAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualFilter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualFilterAccess().getValueAssignment_3()); }
	(rule__EqualFilter__ValueAssignment_3)
	{ after(grammarAccess.getEqualFilterAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistFilter__Group__0__Impl
	rule__ExistFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistFilterAccess().getExistFilterAction_0()); }
	()
	{ after(grammarAccess.getExistFilterAccess().getExistFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistFilter__Group__1__Impl
	rule__ExistFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistFilterAccess().getPathAssignment_1()); }
	(rule__ExistFilter__PathAssignment_1)
	{ after(grammarAccess.getExistFilterAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistFilter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistFilterAccess().getQuestionMarkKeyword_2()); }
	'?'
	{ after(grammarAccess.getExistFilterAccess().getQuestionMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexFilter__Group__0__Impl
	rule__IndexFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexFilterAccess().getIndexFilterAction_0()); }
	()
	{ after(grammarAccess.getIndexFilterAccess().getIndexFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexFilterAccess().getIndexAssignment_1()); }
	(rule__IndexFilter__IndexAssignment_1)
	{ after(grammarAccess.getIndexFilterAccess().getIndexAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoundFilter__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_0__0__Impl
	rule__BoundFilter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getBoundFilterAction_0_0()); }
	()
	{ after(grammarAccess.getBoundFilterAccess().getBoundFilterAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getGroup_0_1()); }
	(rule__BoundFilter__Group_0_1__0)
	{ after(grammarAccess.getBoundFilterAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoundFilter__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_0_1__0__Impl
	rule__BoundFilter__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getMinAssignment_0_1_0()); }
	(rule__BoundFilter__MinAssignment_0_1_0)
	{ after(grammarAccess.getBoundFilterAccess().getMinAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_0_1__1__Impl
	rule__BoundFilter__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getFullStopFullStopKeyword_0_1_1()); }
	'..'
	{ after(grammarAccess.getBoundFilterAccess().getFullStopFullStopKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getMaxAssignment_0_1_2()); }
	(rule__BoundFilter__MaxAssignment_0_1_2)?
	{ after(grammarAccess.getBoundFilterAccess().getMaxAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoundFilter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_1__0__Impl
	rule__BoundFilter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getFullStopFullStopKeyword_1_0()); }
	'..'
	{ after(grammarAccess.getBoundFilterAccess().getFullStopFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundFilter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundFilterAccess().getMaxAssignment_1_1()); }
	(rule__BoundFilter__MaxAssignment_1_1)
	{ after(grammarAccess.getBoundFilterAccess().getMaxAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListFilter__Group__0__Impl
	rule__ListFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFilterAccess().getListFilterAction_0()); }
	()
	{ after(grammarAccess.getListFilterAccess().getListFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListFilter__Group__1__Impl
	rule__ListFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFilterAccess().getFilterAssignment_1()); }
	(rule__ListFilter__FilterAssignment_1)
	{ after(grammarAccess.getListFilterAccess().getFilterAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListFilter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFilterAccess().getGroup_2()); }
	(rule__ListFilter__Group_2__0)*
	{ after(grammarAccess.getListFilterAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListFilter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListFilter__Group_2__0__Impl
	rule__ListFilter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFilterAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getListFilterAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListFilter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFilterAccess().getFilterAssignment_2_1()); }
	(rule__ListFilter__FilterAssignment_2_1)
	{ after(grammarAccess.getListFilterAccess().getFilterAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonNull__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNull__Group__0__Impl
	rule__JsonNull__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNull__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNullAccess().getJsonNullAction_0()); }
	()
	{ after(grammarAccess.getJsonNullAccess().getJsonNullAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNull__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNull__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNull__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNullAccess().getNullKeyword_1()); }
	'null'
	{ after(grammarAccess.getJsonNullAccess().getNullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNumber__Group__0__Impl
	rule__JsonNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNumberAccess().getJsonNumberAction_0()); }
	()
	{ after(grammarAccess.getJsonNumberAccess().getJsonNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNumber__Group__1__Impl
	rule__JsonNumber__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNumberAccess().getNumberAssignment_1()); }
	(rule__JsonNumber__NumberAssignment_1)
	{ after(grammarAccess.getJsonNumberAccess().getNumberAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNumber__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNumberAccess().getGroup_2()); }
	(rule__JsonNumber__Group_2__0)?
	{ after(grammarAccess.getJsonNumberAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonNumber__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNumber__Group_2__0__Impl
	rule__JsonNumber__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNumberAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getJsonNumberAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonNumber__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonNumberAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getJsonNumberAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonBoolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonBoolean__Group__0__Impl
	rule__JsonBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonBooleanAccess().getJsonBooleanAction_0()); }
	()
	{ after(grammarAccess.getJsonBooleanAccess().getJsonBooleanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonBoolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonBooleanAccess().getBoolAssignment_1()); }
	(rule__JsonBoolean__BoolAssignment_1)
	{ after(grammarAccess.getJsonBooleanAccess().getBoolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonString__Group__0__Impl
	rule__JsonString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonStringAccess().getJsonStringAction_0()); }
	()
	{ after(grammarAccess.getJsonStringAccess().getJsonStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonStringAccess().getValueAssignment_1()); }
	(rule__JsonString__ValueAssignment_1)
	{ after(grammarAccess.getJsonStringAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__NodesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getNodesNodeParserRuleCall_1_0_0()); }
		ruleNode
		{ after(grammarAccess.getPathAccess().getNodesNodeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__NodesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getNodesNodeParserRuleCall_1_1_1_0()); }
		ruleNode
		{ after(grammarAccess.getPathAccess().getNodesNodeParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicNode__StrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicNodeAccess().getStrAlternatives_1_0()); }
		(rule__BasicNode__StrAlternatives_1_0)
		{ after(grammarAccess.getBasicNodeAccess().getStrAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__StrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayNodeAccess().getStrAlternatives_1_0()); }
		(rule__ArrayNode__StrAlternatives_1_0)
		{ after(grammarAccess.getArrayNodeAccess().getStrAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayNode__FilterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayNodeAccess().getFilterListFilterParserRuleCall_3_0()); }
		ruleListFilter
		{ after(grammarAccess.getArrayNodeAccess().getFilterListFilterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualFilterAccess().getPathPathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getEqualFilterAccess().getPathPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualFilter__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualFilterAccess().getValueJsonValueParserRuleCall_3_0()); }
		ruleJsonValue
		{ after(grammarAccess.getEqualFilterAccess().getValueJsonValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistFilter__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistFilterAccess().getPathPathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getExistFilterAccess().getPathPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexFilter__IndexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexFilterAccess().getIndexINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIndexFilterAccess().getIndexINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__MinAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundFilterAccess().getMinINTTerminalRuleCall_0_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundFilterAccess().getMinINTTerminalRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__MaxAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundFilterAccess().getMaxINTTerminalRuleCall_0_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundFilterAccess().getMaxINTTerminalRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundFilter__MaxAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundFilterAccess().getMaxINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundFilterAccess().getMaxINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__FilterAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFilterAccess().getFilterFilterParserRuleCall_1_0()); }
		ruleFilter
		{ after(grammarAccess.getListFilterAccess().getFilterFilterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListFilter__FilterAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFilterAccess().getFilterFilterParserRuleCall_2_1_0()); }
		ruleFilter
		{ after(grammarAccess.getListFilterAccess().getFilterFilterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonNumber__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonNumberAccess().getNumberINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getJsonNumberAccess().getNumberINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__BoolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getBoolAlternatives_1_0()); }
		(rule__JsonBoolean__BoolAlternatives_1_0)
		{ after(grammarAccess.getJsonBooleanAccess().getBoolAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonString__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonStringAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonStringAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
